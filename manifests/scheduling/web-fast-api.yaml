# ------------------------ Manual Scheduling ----------------------------
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: web-fastapi-app
#   namespace: web-app
#   labels:
#     name: web-fastapi-app
# spec:
#   containers:
#     - name: web-fastapi-app-container
#       image: "docker.io/gmtdocker/my-fast-api"
#       imagePullPolicy: IfNotPresent
#   nodeName: kind-multi-node-worker3

# ------------------------------------------------------------------------------

# ================================ Taint and Toleration ========================
# apiVersion: v1
# kind: Pod
# metadata:
#   name: web-fastapi-app
#   namespace: web-app
#   labels:
#     name: web-fastapi-app
# spec:
#   containers:
#   - name: web-fastapi-app-container
#     image: docker.io/gmtdocker/my-fast-api
#     resources:
#       limits:
#         memory: "128Mi"
#         cpu: "500m"
#     imagePullPolicy: IfNotPresent
#   # Any nodes need to be tainted with size Large using below command to check the taint and toleration functionality
#   # kubectl taint nodes <node name> <key>=<value>:<Node Effect>
#   # Eg: kubectl taint nodes worker1 size=Large:NoSchedule
#   tolerations:
#     - key: "size"
#       value: "Large"
#       effect: "NoSchedule"

# =====================================================================================

# *********************************** Node Selector ***********************************
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: web-fastapi-app
#   namespace: web-app
#   labels:
#     name: web-fastapi-app
# spec:
#   containers:
#   - name: web-fastapi-app-container
#     image: docker.io/gmtdocker/my-fast-api
#     resources:
#       limits:
#         memory: "128Mi"
#         cpu: "500m"
#     imagePullPolicy: IfNotPresent
#   # Below example of nodeSelector where any nodes has to be labelled with size Large using below command
#   # kubectl label nodes <node name> <key>=<value> 
#   # For eg: kubectl label nodes worker2 size=Large
#   # However nodeSelector does not support advance opreration  like AND OR NOT etc. So we have nodeaffinity rules.
#   nodeSelector:
#     size: Large

# ***************************************************************************************

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Node Affinity <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: web-fastapi-app
#   namespace: web-app
#   labels:
#     name: web-fastapi-app
# spec:
#   containers:
#   - name: web-fastapi-app-container
#     image: docker.io/gmtdocker/my-fast-api
#     resources:
#       limits:
#         memory: "128Mi"
#         cpu: "500m"
#     imagePullPolicy: IfNotPresent

#   # Below example of node affinity where we are asking a pod to be schedule on either Large or Medium node.
#   # it support multiple operations: like IN, NotIn, Exists etc..
#   affinity:
#     nodeaffinity:
#       requiredDuringSchedulingIgnoreDuringExecution:
#         nodeSelectorTerm:
#           - matchExpression:
#             - key: size
#               operator: In
#               value:
#                 - Large
#                 - Medium
      
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


          